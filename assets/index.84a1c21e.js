import{C as e,u as t,G as n,V as r,a,W as o,b as s,F as i,e as l,E as c,R as m,S as u,c as d,d as f}from"./vendor.bb42ad04.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(n){const r=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((n,o)=>{const s=new URL(e,r);if(self[t].moduleMap[s])return n(self[t].moduleMap[s]);const i=new Blob([`import * as m from '${s}';`,`${t}.moduleMap['${s}']=m;`],{type:"text/javascript"}),l=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(i),onerror(){o(new Error(`Failed to import: ${e}`)),a(l)},onload(){n(self[t].moduleMap[s]),a(l)}});document.head.appendChild(l)})),self[t].moduleMap={}}}("assets/");function v(){const t=e.createElement("sphereBufferGeometry",{args:[6,32,32]});return e.createElement("group",{position:[0,0,-10]},e.createElement("mesh",{layers:[0],scale:[.98,.98,.98]},t,e.createElement("meshBasicMaterial",{transparent:!0,opacity:.5,color:"#44f"})),e.createElement("mesh",{layers:[1]},t,e.createElement("meshBasicMaterial",{color:"#acf"})))}function h(){const r=t(n,"./assets/deerhead.4f645de0.glb").nodes.mesh_0;return e.createElement("group",{rotation:[-1.8,0,-1.2],position:[0,-7,0]},e.createElement("mesh",{geometry:r.geometry,layers:[0],receiveShadow:!0,castShadow:!0},e.createElement("meshStandardMaterial",{color:"#555",roughness:1,metalness:.5})),e.createElement("mesh",{geometry:r.geometry,layers:[1],receiveShadow:!0,castShadow:!0},e.createElement("meshBasicMaterial",{color:"#000"})))}const p={uniforms:{tDiffuse:{value:null},tAdd:{value:null}},vertexShader:"\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }",fragmentShader:"\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tAdd;\n    varying vec2 vUv;\n    void main() {\n      vec4 color = texture2D( tDiffuse, vUv );\n      vec4 add = texture2D( tAdd, vUv );\n      gl_FragColor = color + add;\n    }"},g={uniforms:{tDiffuse:{value:null},lightPosition:{value:new r(.5,.75)},exposure:{value:.18},decay:{value:.95},density:{value:.75},weight:{value:.4},samples:{value:50}},vertexShader:"\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }",fragmentShader:"\n    varying vec2 vUv;\n    uniform sampler2D tDiffuse;\n    uniform vec2 lightPosition;\n    uniform float exposure;\n    uniform float decay;\n    uniform float density;\n    uniform float weight;\n    uniform int samples;\n    const int MAX_SAMPLES = 100;\n    void main()\n    {\n      vec2 texCoord = vUv;\n      vec2 deltaTextCoord = texCoord - lightPosition;\n      deltaTextCoord *= 1.0 / float(samples) * density;\n      vec4 color = texture2D(tDiffuse, texCoord);\n      float illuminationDecay = 1.0;\n      for(int i=0; i < MAX_SAMPLES; i++) {\n        if(i == samples) break;\n        texCoord -= deltaTextCoord;\n        vec4 tex = texture2D(tDiffuse, texCoord);\n        tex *= illuminationDecay * weight;\n        color += tex;\n        illuminationDecay *= decay;\n      }\n      gl_FragColor = color * exposure;\n    }"};function E(){const{gl:t,scene:n,camera:r,size:l}=a(),c=e.useMemo((()=>new o(0,0)),[]),m=e.useRef(null),u=e.useRef(null);return e.useEffect((()=>{m.current.setSize(l.width,l.height),u.current.setSize(l.width,l.height)}),[l]),s((()=>{r.layers.set(1),m.current.render(),r.layers.set(0),u.current.render()}),1),e.createElement(e.Fragment,null,e.createElement("effectComposer",{ref:m,args:[t,c],renderToScreen:!1},e.createElement("renderPass",{attachArray:"passes",args:[n,r]}),e.createElement("shaderPass",{attachArray:"passes",args:[g],needsSwap:!1})),e.createElement("effectComposer",{ref:u,args:[t]},e.createElement("renderPass",{attachArray:"passes",args:[n,r]}),e.createElement("shaderPass",{attachArray:"passes",args:[p],"uniforms-tAdd-value":c.texture}),e.createElement("shaderPass",{attachArray:"passes",args:[i],"uniforms-resolution-value":[1/l.width,1/l.height],renderToScreen:!0})))}function y(){return e.createElement(e.Fragment,null,e.createElement("ambientLight",{intensity:.5}),e.createElement("pointLight",{position:[0,60,-100],intensity:20}),e.createElement("pointLight",{position:[-50,0,-50],intensity:2}),e.createElement("spotLight",{castShadow:!0,intensity:8,angle:.31,position:[10,10,10],"shadow-mapSize-width":2048,"shadow-mapSize-height":2048}))}function w(){return e.createElement(d,{shadowMap:!0,style:{background:"#171717"},camera:{position:[0,0,12],fov:50},gl:{antialias:!1}},e.createElement(y,null),e.createElement(v,null),e.createElement(e.Suspense,{fallback:null},e.createElement(h,null)),e.createElement(E,null))}l({EffectComposer:c,RenderPass:m,ShaderPass:u}),f.render(e.createElement(e.StrictMode,null,e.createElement(w,null)),document.getElementById("root"));
